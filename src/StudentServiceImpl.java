import java.util.ArrayList;

public class StudentServiceImpl implements StudentService{
    @Override
    public Student getById(ArrayList<Student> students, int studentId) {
        for (Student student : students){
            if (student.getId() == studentId){
                return student;
            }
        }
        throw new RuntimeException("–ü–æ–∑–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ id : " + studentId);
    }

    @Override
    public Student getByName(ArrayList<Student> students, String studentName) {
        for (Student student : students){
            if (student.getName() == studentName){
                return student;
            }
        }
        throw new RuntimeException("–ü–æ–∑–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ name; " + studentName);
    }

    @Override
    public void getAllStudents(ArrayList<Student> students) {
        for (Student student : students){
            System.out.println(student);
        }

    }

    @Override
    public ArrayList<Student> getAllStudentBoys(ArrayList<Student> students) {

        for (Student student : students)
            if (student.getGender().equals(Gender.MALE)) {
                return students;
            }
        throw new RuntimeException("–ù–µ –Ω–∞–π–¥–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ gender FEMALE" + Gender.MALE);
    }

    @Override
    public ArrayList<Student> getAllStudentGirls(ArrayList<Student> students) {
        for (Student student : students){
            if (student.getGender().equals(Gender.FEMALE)){
                return students;
            }
        }
        throw new RuntimeException("–ù–µ –Ω–∞–π–¥–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ gender FEMALE" + Gender.FEMALE);
    }

    @Override
    public ArrayList<Student> getAllOfflineStudents(ArrayList<Student> students) {
        for (Student student : students){
            if (student.getStudyFormat().equals(StudyFormat.OFFLINE)){
                return students;
            }
        }
        throw new RuntimeException("–ù–µ –Ω–∞–π–¥–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ —Ñ–æ—Ä–º–∞—Ä—Ç—É OFFLINE: " + StudyFormat.OFFLINE);
    }

    @Override
    public ArrayList<Student> getAllOnlineStudents(ArrayList<Student> students) {
        for (Student student : students){
            if (student.getStudyFormat().equals(StudyFormat.ONLINE)){
                return students;
            }
        }
        throw new RuntimeException("–ù–µ –Ω–∞–π–¥–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ —Ñ–æ—Ä–º–∞—Ä—Ç—É ONLINE: " + StudyFormat.ONLINE);
    }

    @Override
    public double getAverageAge(ArrayList<Student> students) {
        double summa = 0;
        for (Student student : students){
            summa+= student.getAge();
        }
        return summa/ students.size();
    }

    @Override
    public int getCountOnlineStudents(ArrayList<Student> students) {
        int countOnlineStudents = 0;
        for (Student student : students){
            if (student.getStudyFormat() == StudyFormat.ONLINE){
                countOnlineStudents++;
            }
        }
        return countOnlineStudents;
    }

    @Override
    public int getCountOfflineStudents(ArrayList<Student> students) {
        int countOfflineStudents = 0;
        for (Student student : students){
            if(student.getStudyFormat() == StudyFormat.OFFLINE){
                countOfflineStudents++;
            }
        }
        return countOfflineStudents;
    }
    /**
     *   –î–æ—Å—Ç–æ—Ä –±—É–ª –∂–µ—Ä–¥–µ–≥–∏ –º–µ—Ç–æ–¥—Ç–æ—Ä–¥—É –∞—Ç—ã–Ω –∞–π—Ç—ã–ø –∂–∞—Ç–∫–∞–Ω–¥–∞–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –∫—ã–ª—É—É –∫–µ—Ä–µ–∫
     *   –ú–∏—Å–∞–ª—ã  ArrayList<Student> getAllOfflineStudents(ArrayList<Student> students);
     *   –ë—É–ª –∂–µ—Ä–¥–µ –ë–∞–∞—Ä–¥—ã–∫ –û—Ñ—Ñ–ª–∞–π–Ω –æ–∫—É—É–≥–∞–Ω —Å—Ç—É–¥–µ–Ω—Ç—Ç–µ—Ä–¥–∏ —á—ã–≥–∞—Ä—É—É –∫–µ—Ä–µ–∫(enum) –ø–æ–ª—è—Å—ã –∞—Ä–∫—ã–ª—É—É —Å–∞–ª—ã—à—Ç—ã—Ä–∞–±—ã–∑
     *
     */

// –ë—É–ª –∂–µ—Ä–≥–µ StudentService —Ç–∏–Ω –º–µ—Ç–æ–¥—Ç–æ—Ä—É–Ω –∞–ª—ã–ø –∫–µ–ª—É—É –∫–µ—Ä–µ–∫ –±–∏—Ä–æ–∫ –∫–∞–Ω—Ç–∏–ø ü§î?
}
